/*
 * This file is generated by jOOQ.
 */
package com.billingweb.model.tables.pojos;


import com.billingweb.model.tables.interfaces.IItUsers;


/**
 * Table that stores application users
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItUsers implements IItUsers {

    private static final long serialVersionUID = 1L;

    private Integer userId;
    private String  name;
    private String  surname;
    private String  email;
    private String  phoneContact;
    private String  userCode;
    private String  password;
    private Integer profileId;
    private Boolean active;

    public ItUsers() {}

    public ItUsers(IItUsers value) {
        this.userId = value.getUserId();
        this.name = value.getName();
        this.surname = value.getSurname();
        this.email = value.getEmail();
        this.phoneContact = value.getPhoneContact();
        this.userCode = value.getUserCode();
        this.password = value.getPassword();
        this.profileId = value.getProfileId();
        this.active = value.getActive();
    }

    public ItUsers(
        Integer userId,
        String  name,
        String  surname,
        String  email,
        String  phoneContact,
        String  userCode,
        String  password,
        Integer profileId,
        Boolean active
    ) {
        this.userId = userId;
        this.name = name;
        this.surname = surname;
        this.email = email;
        this.phoneContact = phoneContact;
        this.userCode = userCode;
        this.password = password;
        this.profileId = profileId;
        this.active = active;
    }

    /**
     * Getter for <code>public.it_users.user_id</code>. InternaL identifier of the user
     */
    @Override
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.it_users.user_id</code>. InternaL identifier of the user
     */
    @Override
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>public.it_users.name</code>. Name of the user
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.it_users.name</code>. Name of the user
     */
    @Override
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.it_users.surname</code>. Surname of the user
     */
    @Override
    public String getSurname() {
        return this.surname;
    }

    /**
     * Setter for <code>public.it_users.surname</code>. Surname of the user
     */
    @Override
    public void setSurname(String surname) {
        this.surname = surname;
    }

    /**
     * Getter for <code>public.it_users.email</code>. Email of the user
     */
    @Override
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>public.it_users.email</code>. Email of the user
     */
    @Override
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>public.it_users.phone_contact</code>. Phone contact of the user
     */
    @Override
    public String getPhoneContact() {
        return this.phoneContact;
    }

    /**
     * Setter for <code>public.it_users.phone_contact</code>. Phone contact of the user
     */
    @Override
    public void setPhoneContact(String phoneContact) {
        this.phoneContact = phoneContact;
    }

    /**
     * Getter for <code>public.it_users.user_code</code>. Code of the user (to login)
     */
    @Override
    public String getUserCode() {
        return this.userCode;
    }

    /**
     * Setter for <code>public.it_users.user_code</code>. Code of the user (to login)
     */
    @Override
    public void setUserCode(String userCode) {
        this.userCode = userCode;
    }

    /**
     * Getter for <code>public.it_users.password</code>. Password for the user - md5 encrypted
     */
    @Override
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>public.it_users.password</code>. Password for the user - md5 encrypted
     */
    @Override
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for <code>public.it_users.profile_id</code>. Internal identifier for the profile of the user
     */
    @Override
    public Integer getProfileId() {
        return this.profileId;
    }

    /**
     * Setter for <code>public.it_users.profile_id</code>. Internal identifier for the profile of the user
     */
    @Override
    public void setProfileId(Integer profileId) {
        this.profileId = profileId;
    }

    /**
     * Getter for <code>public.it_users.active</code>.
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>public.it_users.active</code>.
     */
    @Override
    public void setActive(Boolean active) {
        this.active = active;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ItUsers (");

        sb.append(userId);
        sb.append(", ").append(name);
        sb.append(", ").append(surname);
        sb.append(", ").append(email);
        sb.append(", ").append(phoneContact);
        sb.append(", ").append(userCode);
        sb.append(", ").append(password);
        sb.append(", ").append(profileId);
        sb.append(", ").append(active);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IItUsers from) {
        setUserId(from.getUserId());
        setName(from.getName());
        setSurname(from.getSurname());
        setEmail(from.getEmail());
        setPhoneContact(from.getPhoneContact());
        setUserCode(from.getUserCode());
        setPassword(from.getPassword());
        setProfileId(from.getProfileId());
        setActive(from.getActive());
    }

    @Override
    public <E extends IItUsers> E into(E into) {
        into.from(this);
        return into;
    }
}
