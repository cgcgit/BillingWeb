/*
 * This file is generated by jOOQ.
 */
package com.billingweb.model.tables.daos;


import com.billingweb.model.tables.PtConsumptionClass;
import com.billingweb.model.tables.records.PtConsumptionClassRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * Table that stores the consumtion class of the application
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PtConsumptionClassDao extends DAOImpl<PtConsumptionClassRecord, com.billingweb.model.tables.pojos.PtConsumptionClass, Integer> {

    /**
     * Create a new PtConsumptionClassDao without any configuration
     */
    public PtConsumptionClassDao() {
        super(PtConsumptionClass.PT_CONSUMPTION_CLASS, com.billingweb.model.tables.pojos.PtConsumptionClass.class);
    }

    /**
     * Create a new PtConsumptionClassDao with an attached configuration
     */
    public PtConsumptionClassDao(Configuration configuration) {
        super(PtConsumptionClass.PT_CONSUMPTION_CLASS, com.billingweb.model.tables.pojos.PtConsumptionClass.class, configuration);
    }

    @Override
    public Integer getId(com.billingweb.model.tables.pojos.PtConsumptionClass object) {
        return object.getConsumptionClassId();
    }

    /**
     * Fetch records that have <code>consumption_class_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.billingweb.model.tables.pojos.PtConsumptionClass> fetchRangeOfConsumptionClassId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PtConsumptionClass.PT_CONSUMPTION_CLASS.CONSUMPTION_CLASS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>consumption_class_id IN (values)</code>
     */
    public List<com.billingweb.model.tables.pojos.PtConsumptionClass> fetchByConsumptionClassId(Integer... values) {
        return fetch(PtConsumptionClass.PT_CONSUMPTION_CLASS.CONSUMPTION_CLASS_ID, values);
    }

    /**
     * Fetch a unique record that has <code>consumption_class_id = value</code>
     */
    public com.billingweb.model.tables.pojos.PtConsumptionClass fetchOneByConsumptionClassId(Integer value) {
        return fetchOne(PtConsumptionClass.PT_CONSUMPTION_CLASS.CONSUMPTION_CLASS_ID, value);
    }

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.billingweb.model.tables.pojos.PtConsumptionClass> fetchRangeOfCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(PtConsumptionClass.PT_CONSUMPTION_CLASS.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.billingweb.model.tables.pojos.PtConsumptionClass> fetchByCode(String... values) {
        return fetch(PtConsumptionClass.PT_CONSUMPTION_CLASS.CODE, values);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public com.billingweb.model.tables.pojos.PtConsumptionClass fetchOneByCode(String value) {
        return fetchOne(PtConsumptionClass.PT_CONSUMPTION_CLASS.CODE, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.billingweb.model.tables.pojos.PtConsumptionClass> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PtConsumptionClass.PT_CONSUMPTION_CLASS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.billingweb.model.tables.pojos.PtConsumptionClass> fetchByName(String... values) {
        return fetch(PtConsumptionClass.PT_CONSUMPTION_CLASS.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.billingweb.model.tables.pojos.PtConsumptionClass fetchOneByName(String value) {
        return fetchOne(PtConsumptionClass.PT_CONSUMPTION_CLASS.NAME, value);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.billingweb.model.tables.pojos.PtConsumptionClass> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(PtConsumptionClass.PT_CONSUMPTION_CLASS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.billingweb.model.tables.pojos.PtConsumptionClass> fetchByDescription(String... values) {
        return fetch(PtConsumptionClass.PT_CONSUMPTION_CLASS.DESCRIPTION, values);
    }
}
