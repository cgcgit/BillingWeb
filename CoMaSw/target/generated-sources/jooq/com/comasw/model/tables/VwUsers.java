/*
 * This file is generated by jOOQ.
 */
package com.comasw.model.tables;


import com.comasw.model.Public;
import com.comasw.model.tables.records.VwUsersRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VwUsers extends TableImpl<VwUsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.vw_users</code>
     */
    public static final VwUsers VW_USERS = new VwUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VwUsersRecord> getRecordType() {
        return VwUsersRecord.class;
    }

    /**
     * The column <code>public.vw_users.user_id</code>.
     */
    public final TableField<VwUsersRecord, Integer> USER_ID = createField(DSL.name("user_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.vw_users.user_code</code>.
     */
    public final TableField<VwUsersRecord, String> USER_CODE = createField(DSL.name("user_code"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.vw_users.password</code>.
     */
    public final TableField<VwUsersRecord, String> PASSWORD = createField(DSL.name("password"), SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>public.vw_users.profile_id</code>.
     */
    public final TableField<VwUsersRecord, Integer> PROFILE_ID = createField(DSL.name("profile_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.vw_users.profile_code</code>.
     */
    public final TableField<VwUsersRecord, String> PROFILE_CODE = createField(DSL.name("profile_code"), SQLDataType.VARCHAR(10), this, "");

    private VwUsers(Name alias, Table<VwUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private VwUsers(Name alias, Table<VwUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view());
    }

    /**
     * Create an aliased <code>public.vw_users</code> table reference
     */
    public VwUsers(String alias) {
        this(DSL.name(alias), VW_USERS);
    }

    /**
     * Create an aliased <code>public.vw_users</code> table reference
     */
    public VwUsers(Name alias) {
        this(alias, VW_USERS);
    }

    /**
     * Create a <code>public.vw_users</code> table reference
     */
    public VwUsers() {
        this(DSL.name("vw_users"), null);
    }

    public <O extends Record> VwUsers(Table<O> child, ForeignKey<O, VwUsersRecord> key) {
        super(child, key, VW_USERS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public VwUsers as(String alias) {
        return new VwUsers(DSL.name(alias), this);
    }

    @Override
    public VwUsers as(Name alias) {
        return new VwUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VwUsers rename(String name) {
        return new VwUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VwUsers rename(Name name) {
        return new VwUsers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
