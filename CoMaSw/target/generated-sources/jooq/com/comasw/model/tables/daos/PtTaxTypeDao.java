/*
 * This file is generated by jOOQ.
 */
package com.comasw.model.tables.daos;


import com.comasw.model.tables.PtTaxType;
import com.comasw.model.tables.records.PtTaxTypeRecord;

import java.math.BigDecimal;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * Table that stores the tax type of the application
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PtTaxTypeDao extends DAOImpl<PtTaxTypeRecord, com.comasw.model.tables.pojos.PtTaxType, Integer> {

    /**
     * Create a new PtTaxTypeDao without any configuration
     */
    public PtTaxTypeDao() {
        super(PtTaxType.PT_TAX_TYPE, com.comasw.model.tables.pojos.PtTaxType.class);
    }

    /**
     * Create a new PtTaxTypeDao with an attached configuration
     */
    public PtTaxTypeDao(Configuration configuration) {
        super(PtTaxType.PT_TAX_TYPE, com.comasw.model.tables.pojos.PtTaxType.class, configuration);
    }

    @Override
    public Integer getId(com.comasw.model.tables.pojos.PtTaxType object) {
        return object.getTaxTypeId();
    }

    /**
     * Fetch records that have <code>tax_type_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchRangeOfTaxTypeId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PtTaxType.PT_TAX_TYPE.TAX_TYPE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tax_type_id IN (values)</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchByTaxTypeId(Integer... values) {
        return fetch(PtTaxType.PT_TAX_TYPE.TAX_TYPE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>tax_type_id = value</code>
     */
    public com.comasw.model.tables.pojos.PtTaxType fetchOneByTaxTypeId(Integer value) {
        return fetchOne(PtTaxType.PT_TAX_TYPE.TAX_TYPE_ID, value);
    }

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchRangeOfCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(PtTaxType.PT_TAX_TYPE.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchByCode(String... values) {
        return fetch(PtTaxType.PT_TAX_TYPE.CODE, values);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public com.comasw.model.tables.pojos.PtTaxType fetchOneByCode(String value) {
        return fetchOne(PtTaxType.PT_TAX_TYPE.CODE, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PtTaxType.PT_TAX_TYPE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchByName(String... values) {
        return fetch(PtTaxType.PT_TAX_TYPE.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.comasw.model.tables.pojos.PtTaxType fetchOneByName(String value) {
        return fetchOne(PtTaxType.PT_TAX_TYPE.NAME, value);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(PtTaxType.PT_TAX_TYPE.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchByDescription(String... values) {
        return fetch(PtTaxType.PT_TAX_TYPE.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>percent_value BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchRangeOfPercentValue(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(PtTaxType.PT_TAX_TYPE.PERCENT_VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>percent_value IN (values)</code>
     */
    public List<com.comasw.model.tables.pojos.PtTaxType> fetchByPercentValue(BigDecimal... values) {
        return fetch(PtTaxType.PT_TAX_TYPE.PERCENT_VALUE, values);
    }
}
