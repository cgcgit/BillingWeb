/*
 * This file is generated by jOOQ.
 */
package com.comasw.model.tables;


import com.comasw.model.Keys;
import com.comasw.model.Public;
import com.comasw.model.tables.records.CtPromotionTypeBckRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Table that stores the promotion types of the catalog for the application
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CtPromotionTypeBck extends TableImpl<CtPromotionTypeBckRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.ct_promotion_type_bck</code>
     */
    public static final CtPromotionTypeBck CT_PROMOTION_TYPE_BCK = new CtPromotionTypeBck();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CtPromotionTypeBckRecord> getRecordType() {
        return CtPromotionTypeBckRecord.class;
    }

    /**
     * The column <code>public.ct_promotion_type_bck.promotion_type_id</code>. Internal identifier of the promotion type
     */
    public final TableField<CtPromotionTypeBckRecord, Integer> PROMOTION_TYPE_ID = createField(DSL.name("promotion_type_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("nextval('seq_promotion_type_id'::regclass)", SQLDataType.INTEGER)), this, "Internal identifier of the promotion type");

    /**
     * The column <code>public.ct_promotion_type_bck.entity_type_id</code>. Entity_id for the promotion type
     */
    public final TableField<CtPromotionTypeBckRecord, Integer> ENTITY_TYPE_ID = createField(DSL.name("entity_type_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("1002", SQLDataType.INTEGER)), this, "Entity_id for the promotion type");

    /**
     * The column <code>public.ct_promotion_type_bck.code</code>. Code of the promotion type
     */
    public final TableField<CtPromotionTypeBckRecord, String> CODE = createField(DSL.name("code"), SQLDataType.VARCHAR(10).nullable(false), this, "Code of the promotion type");

    /**
     * The column <code>public.ct_promotion_type_bck.name</code>. Name of the promotion type
     */
    public final TableField<CtPromotionTypeBckRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(50).nullable(false), this, "Name of the promotion type");

    /**
     * The column <code>public.ct_promotion_type_bck.description</code>. Description for the promotion type
     */
    public final TableField<CtPromotionTypeBckRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(500).nullable(false), this, "Description for the promotion type");

    /**
     * The column <code>public.ct_promotion_type_bck.application_level_id</code>. Application level id for the promotion type
     */
    public final TableField<CtPromotionTypeBckRecord, Integer> APPLICATION_LEVEL_ID = createField(DSL.name("application_level_id"), SQLDataType.INTEGER.nullable(false), this, "Application level id for the promotion type");

    /**
     * The column <code>public.ct_promotion_type_bck.discount_type_id</code>. Type of the discount for the promotion type (percent, minutes, units, etc)
     */
    public final TableField<CtPromotionTypeBckRecord, Integer> DISCOUNT_TYPE_ID = createField(DSL.name("discount_type_id"), SQLDataType.INTEGER.nullable(false), this, "Type of the discount for the promotion type (percent, minutes, units, etc)");

    /**
     * The column <code>public.ct_promotion_type_bck.discount_value</code>. Value of the discount for the promotion type
     */
    public final TableField<CtPromotionTypeBckRecord, BigDecimal> DISCOUNT_VALUE = createField(DSL.name("discount_value"), SQLDataType.NUMERIC(10, 4).nullable(false), this, "Value of the discount for the promotion type");

    /**
     * The column <code>public.ct_promotion_type_bck.status_id</code>. Status id for the promotion type
     */
    public final TableField<CtPromotionTypeBckRecord, Integer> STATUS_ID = createField(DSL.name("status_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("1000", SQLDataType.INTEGER)), this, "Status id for the promotion type");

    /**
     * The column <code>public.ct_promotion_type_bck.input_date</code>. Date on which the record was created
     */
    public final TableField<CtPromotionTypeBckRecord, LocalDateTime> INPUT_DATE = createField(DSL.name("input_date"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("(('now'::text)::timestamp(0) with time zone)::timestamp without time zone", SQLDataType.LOCALDATETIME)), this, "Date on which the record was created");

    /**
     * The column <code>public.ct_promotion_type_bck.input_user</code>. User who was modified the record
     */
    public final TableField<CtPromotionTypeBckRecord, String> INPUT_USER = createField(DSL.name("input_user"), SQLDataType.VARCHAR(10).nullable(false), this, "User who was modified the record");

    /**
     * The column <code>public.ct_promotion_type_bck.modif_date</code>. Date of the last modification of the record
     */
    public final TableField<CtPromotionTypeBckRecord, LocalDateTime> MODIF_DATE = createField(DSL.name("modif_date"), SQLDataType.LOCALDATETIME(6), this, "Date of the last modification of the record");

    /**
     * The column <code>public.ct_promotion_type_bck.modif_user</code>.
     */
    public final TableField<CtPromotionTypeBckRecord, String> MODIF_USER = createField(DSL.name("modif_user"), SQLDataType.VARCHAR(10), this, "");

    private CtPromotionTypeBck(Name alias, Table<CtPromotionTypeBckRecord> aliased) {
        this(alias, aliased, null);
    }

    private CtPromotionTypeBck(Name alias, Table<CtPromotionTypeBckRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Table that stores the promotion types of the catalog for the application"), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.ct_promotion_type_bck</code> table reference
     */
    public CtPromotionTypeBck(String alias) {
        this(DSL.name(alias), CT_PROMOTION_TYPE_BCK);
    }

    /**
     * Create an aliased <code>public.ct_promotion_type_bck</code> table reference
     */
    public CtPromotionTypeBck(Name alias) {
        this(alias, CT_PROMOTION_TYPE_BCK);
    }

    /**
     * Create a <code>public.ct_promotion_type_bck</code> table reference
     */
    public CtPromotionTypeBck() {
        this(DSL.name("ct_promotion_type_bck"), null);
    }

    public <O extends Record> CtPromotionTypeBck(Table<O> child, ForeignKey<O, CtPromotionTypeBckRecord> key) {
        super(child, key, CT_PROMOTION_TYPE_BCK);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<CtPromotionTypeBckRecord> getPrimaryKey() {
        return Keys.CT_PROMOTION_TYPE_PK_B;
    }

    @Override
    public List<UniqueKey<CtPromotionTypeBckRecord>> getKeys() {
        return Arrays.<UniqueKey<CtPromotionTypeBckRecord>>asList(Keys.CT_PROMOTION_TYPE_PK_B, Keys.CT_PROMOTION_TYPE_CODE_U_B, Keys.CT_PROMOTION_TYPE_NAME_U_B);
    }

    @Override
    public List<ForeignKey<CtPromotionTypeBckRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CtPromotionTypeBckRecord, ?>>asList(Keys.CT_PROMOTION_TYPE_BCK__CT_PROMOTION_TYPE_ENTITY_FK_B, Keys.CT_PROMOTION_TYPE_BCK__CT_PROMOTION_TYPE_DISCOUNT_FK_B, Keys.CT_PROMOTION_TYPE_BCK__CT_PROMOTION_TYPE_LEVEL_FK_B, Keys.CT_PROMOTION_TYPE_BCK__CT_PROMOTION_TYPE_STATUS_FK_B);
    }

    private transient PtEntityType _ptEntityType;
    private transient PtApplicationLevel _ptApplicationLevel;
    private transient PtDiscountType _ptDiscountType;
    private transient PtStatus _ptStatus;

    public PtEntityType ptEntityType() {
        if (_ptEntityType == null)
            _ptEntityType = new PtEntityType(this, Keys.CT_PROMOTION_TYPE_BCK__CT_PROMOTION_TYPE_ENTITY_FK_B);

        return _ptEntityType;
    }

    public PtApplicationLevel ptApplicationLevel() {
        if (_ptApplicationLevel == null)
            _ptApplicationLevel = new PtApplicationLevel(this, Keys.CT_PROMOTION_TYPE_BCK__CT_PROMOTION_TYPE_DISCOUNT_FK_B);

        return _ptApplicationLevel;
    }

    public PtDiscountType ptDiscountType() {
        if (_ptDiscountType == null)
            _ptDiscountType = new PtDiscountType(this, Keys.CT_PROMOTION_TYPE_BCK__CT_PROMOTION_TYPE_LEVEL_FK_B);

        return _ptDiscountType;
    }

    public PtStatus ptStatus() {
        if (_ptStatus == null)
            _ptStatus = new PtStatus(this, Keys.CT_PROMOTION_TYPE_BCK__CT_PROMOTION_TYPE_STATUS_FK_B);

        return _ptStatus;
    }

    @Override
    public CtPromotionTypeBck as(String alias) {
        return new CtPromotionTypeBck(DSL.name(alias), this);
    }

    @Override
    public CtPromotionTypeBck as(Name alias) {
        return new CtPromotionTypeBck(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CtPromotionTypeBck rename(String name) {
        return new CtPromotionTypeBck(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CtPromotionTypeBck rename(Name name) {
        return new CtPromotionTypeBck(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, String, String, String, Integer, Integer, BigDecimal, Integer, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
