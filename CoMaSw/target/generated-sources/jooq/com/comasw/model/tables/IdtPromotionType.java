/*
 * This file is generated by jOOQ.
 */
package com.comasw.model.tables;


import com.comasw.model.Keys;
import com.comasw.model.Public;
import com.comasw.model.tables.records.IdtPromotionTypeRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row1;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdtPromotionType extends TableImpl<IdtPromotionTypeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.idt_promotion_type</code>
     */
    public static final IdtPromotionType IDT_PROMOTION_TYPE = new IdtPromotionType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IdtPromotionTypeRecord> getRecordType() {
        return IdtPromotionTypeRecord.class;
    }

    /**
     * The column <code>public.idt_promotion_type.promotion_type_id</code>.
     */
    public final TableField<IdtPromotionTypeRecord, Integer> PROMOTION_TYPE_ID = createField(DSL.name("promotion_type_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("nextval('seq_promotion_type_id'::regclass)", SQLDataType.INTEGER)), this, "");

    private IdtPromotionType(Name alias, Table<IdtPromotionTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private IdtPromotionType(Name alias, Table<IdtPromotionTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.idt_promotion_type</code> table reference
     */
    public IdtPromotionType(String alias) {
        this(DSL.name(alias), IDT_PROMOTION_TYPE);
    }

    /**
     * Create an aliased <code>public.idt_promotion_type</code> table reference
     */
    public IdtPromotionType(Name alias) {
        this(alias, IDT_PROMOTION_TYPE);
    }

    /**
     * Create a <code>public.idt_promotion_type</code> table reference
     */
    public IdtPromotionType() {
        this(DSL.name("idt_promotion_type"), null);
    }

    public <O extends Record> IdtPromotionType(Table<O> child, ForeignKey<O, IdtPromotionTypeRecord> key) {
        super(child, key, IDT_PROMOTION_TYPE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<IdtPromotionTypeRecord> getPrimaryKey() {
        return Keys.IDT_PROMOTION_TYPE_PK;
    }

    @Override
    public List<UniqueKey<IdtPromotionTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<IdtPromotionTypeRecord>>asList(Keys.IDT_PROMOTION_TYPE_PK);
    }

    @Override
    public IdtPromotionType as(String alias) {
        return new IdtPromotionType(DSL.name(alias), this);
    }

    @Override
    public IdtPromotionType as(Name alias) {
        return new IdtPromotionType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IdtPromotionType rename(String name) {
        return new IdtPromotionType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IdtPromotionType rename(Name name) {
        return new IdtPromotionType(name, null);
    }

    // -------------------------------------------------------------------------
    // Row1 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row1<Integer> fieldsRow() {
        return (Row1) super.fieldsRow();
    }
}
